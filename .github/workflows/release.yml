# .github/workflows/release.yml
name: Release Package

on:
  push:
    branches:
      - main # Trigger only on pushes (including merges) to the main branch

permissions:
  contents: write # Needed to create GitHub releases and commit version changes
  issues: write # Needed to comment on issues/PRs linked in commits
  pull-requests: write # Needed to comment on issues/PRs linked in commits
  id-token: write # Needed for potential future OIDC auth

jobs:
  release:
    name: Create Release and Publish NPM Package
    runs-on: ubuntu-latest
    steps:
      # IMPORTANT: Checkout the main branch
      # The trigger ensures this is the correct branch history
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          # No need to specify ref: main, it's implicit from the push trigger
          # Set persist-credentials to false for semantic-release to use its own token for auth
          persist-credentials: false
          # Fetch all history for all tags and branches needed for semantic-release
          fetch-depth: 0

      # 1️⃣ Install pnpm first so setup-node can find it
      - uses: pnpm/action-setup@v4
        with:
          run_install: false # we'll install after caching

      # 2️⃣ Install Node and enable pnpm-store caching
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json" # Use Node.js version from package.json
          cache: "pnpm" # OK now – pnpm already on PATH
          registry-url: "https://registry.npmjs.org" # Needed for pnpm publish auth

      - name: Install dependencies
        run: pnpm install --frozen-lockfile # Use pnpm install

      # Run initial build to ensure it passes before release process
      - name: Build project (Pre-Release Check)
        run: pnpm run build # Run the build script defined in package.json

      - name: Run semantic-release
        id: semantic # Add an ID to reference outputs
        uses: cycjimmy/semantic-release-action@v4 # Use the action
        env:
          # Provide the tokens needed by semantic-release plugins
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions automatically
          # NPM_TOKEN is not strictly needed here as publish is false, but harmless
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Re-build the project AFTER semantic-release has updated package.json
      - name: Build project (Post-Release Version)
        if: steps.semantic.outputs.new_release_published == 'true' # Only build if a release happened
        run: pnpm run build

      # Publish to NPM using pnpm, only if a new release was created
      - name: Publish to NPM
        if: steps.semantic.outputs.new_release_published == 'true' # Check output
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Use NODE_AUTH_TOKEN for pnpm auth

      # Optional: Output status based on semantic-release outputs
      - name: Output Publish Status (Published)
        if: steps.semantic.outputs.new_release_published == 'true' # Check output
        run: echo "✅ New version ${{ steps.semantic.outputs.new_release_version }} tagged, released on GitHub, and published to npm."

      - name: Output Publish Status (Not Published)
        if: steps.semantic.outputs.new_release_published != 'true' # Check output
        run: echo "ℹ️ No new version published."
