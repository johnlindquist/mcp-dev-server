# .github/workflows/ci.yml  –  ultra-fast + order fixed
name: CI (ultra-fast)

on:
  push:
    branches-ignore: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Install pnpm first so setup-node can find it
      - uses: pnpm/action-setup@v4
        with:
          run_install: false # we'll install after caching

      # Extract Node version from pnpm-workspace.yaml
      - id: node
        shell: bash
        run: |
          echo "version=$(yq -e '.useNodeVersion // .executionEnv.nodeVersion' pnpm-workspace.yaml)" >> "$GITHUB_OUTPUT"

      # 2️⃣ Install Node and enable pnpm-store caching
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node.outputs.version }}
          cache: pnpm # OK now – pnpm already on PATH

      # 3️⃣ One cached install, then build
      - name: Install deps
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: Build
        run: pnpm run build

      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  smoke-test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Put pnpm on the PATH first
      - uses: pnpm/action-setup@v4
        with:
          run_install: false # We'll install after caching

      # Install yq on Windows if needed
      - name: Install yq on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: choco install yq -y --no-progress

      # Extract Node version from pnpm-workspace.yaml
      - id: node
        shell: bash
        run: |
          echo "version=$(yq -e '.useNodeVersion // .executionEnv.nodeVersion' pnpm-workspace.yaml)" >> "$GITHUB_OUTPUT"

      # 2️⃣ Now setup-node can safely enable its pnpm cache
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node.outputs.version }}
          cache: pnpm # now succeeds because pnpm exists

      # 3️⃣ Runtime deps (fast because store is cached)
      - name: Install runtime deps only
        run: pnpm install --prod --frozen-lockfile --ignore-scripts # Ignore Husky prepare

      # Windows-only: Cache compiled pty.node so we don't rebuild every run
      # Removed custom node-pty caching logic as pnpm's cache handles this now

      # Rebuild only if needed (pnpm postinstall handles this automatically)
      # Removed explicit rebuild step

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs['artifact-name'] }}
          path: build/

      - name: Smoke test (Bash / 3-second guard)
        # No OS condition here - run bash test on all platforms
        shell: bash
        run: scripts/smoke-test.sh

      - name: Smoke test (Windows PowerShell / 3-second guard)
        if: runner.os == 'Windows' # Only run PowerShell test on Windows
        shell: pwsh
        run: .\scripts\smoke-test.ps1
