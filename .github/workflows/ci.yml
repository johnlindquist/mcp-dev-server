# .github/workflows/ci.yml
# This workflow runs builds and smoke tests on pushes to non-main branches
name: CI

on:
  push:
    branches-ignore: [main]

# Cancel in-progress runs for the same branch on new pushes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Project on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read # Need to read repo contents
      actions: write # Need to write artifacts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ matrix.os }}
          path: build/

  smoke-test:
    name: Smoke Test Built Script on ${{ matrix.os }}
    needs: build # Run after build job completes
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read # Need to read repo contents
      actions: read # Need to read artifacts
    steps:
      - name: Checkout code # Needed for package.json -> npm ci
        uses: actions/checkout@v4

      - name: Setup Node.js # Needed to run node and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Install coreutils on macOS to get gtimeout
      - name: Install coreutils (macOS)
        if: runner.os == 'macOS'
        run: brew install coreutils

      - name: Install dependencies # Need runtime deps (node-pty, tree-kill)
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact-${{ matrix.os }}
          path: "build/" # Quoted path

      - name: Run built script with timeout
        run: |
          TIMEOUT_CMD=timeout # Default to Linux/Windows timeout
          if [ "${{ runner.os }}" == "macOS" ]; then
            TIMEOUT_CMD=gtimeout # Use gtimeout on macOS
          fi
          echo "Running node build/index.mjs with a 3s timeout using $TIMEOUT_CMD..."
          # Run the node script with a 3-second timeout using the correct command
          $TIMEOUT_CMD 3s node build/index.mjs
          EXIT_CODE=$?
          echo "Process exited with code: $EXIT_CODE"

          # Check if the exit code indicates success (0 or 124 for timeout)
          if [ $EXIT_CODE -eq 0 ] || [ $EXIT_CODE -eq 124 ]; then
            echo "Smoke test passed (process ran without immediate error or timed out)."
            exit 0
          else
            echo "Smoke test failed (process exited with error code $EXIT_CODE)."
            exit $EXIT_CODE
          fi
